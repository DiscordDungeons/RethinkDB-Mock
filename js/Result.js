// Generated by CoffeeScript 1.12.4
var Result, define, evalQuery, methods, setProto, utils;

setProto = require("setProto");

utils = require("./utils");

define = Object.defineProperty;

Result = function(parent) {
  var self;
  self = function(key) {
    return self.bracket(key);
  };
  if (utils.isQuery(parent)) {
    self._db = parent._db;
    self._parent = parent;
  } else {
    self._db = null;
    self._parent = Query._expr(parent);
  }
  return setProto(self, Result.prototype);
};

methods = {};

methods._eval = evalQuery = function(ctx) {
  var result;
  result = this._parent._run();
  this._eval = function(ctx) {
    ctx.type = "DATUM";
    return result;
  };
  ctx.type = "DATUM";
  return result;
};

methods._reset = function() {
  delete this._eval;
};

Object.keys(methods).forEach(function(key) {
  return define(Result.prototype, key, {
    value: methods[key],
    writable: true
  });
});

module.exports = Result;
